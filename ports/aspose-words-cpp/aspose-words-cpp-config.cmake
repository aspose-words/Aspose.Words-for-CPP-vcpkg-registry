# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget Aspose::Words)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)
# =============================================================================

if (VCPKG_TARGET_TRIPLET STREQUAL "x64-windows")
  set(_SUFFIX "vc14x64")
elseif (VCPKG_TARGET_TRIPLET STREQUAL "x86-windows")
  set(_SUFFIX "vc14x86")
elseif (VCPKG_TARGET_TRIPLET STREQUAL "x64-osx")
  set(_SUFFIX "appleclang13")
elseif (VCPKG_TARGET_TRIPLET STREQUAL "x64-linux")
  set(_SUFFIX "clang")
endif()

set(_IMPORT_PREFIX "${_VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}")
set(_IMPORTED_IMPLIB_RELEASE "${_IMPORT_PREFIX}/lib/${CMAKE_IMPORT_LIBRARY_PREFIX}Aspose.Words.Cpp_${_SUFFIX}${CMAKE_IMPORT_LIBRARY_SUFFIX}")
set(_IMPORTED_LOCATION_RELEASE "${_IMPORT_PREFIX}/bin/${CMAKE_SHARED_LIBRARY_PREFIX}Aspose.Words.Cpp_${_SUFFIX}${CMAKE_SHARED_LIBRARY_SUFFIX}")
set(_IMPORTED_SONAME "${CMAKE_SHARED_LIBRARY_PREFIX}Aspose.Words.Cpp_${_SUFFIX}${CMAKE_SHARED_LIBRARY_SUFFIX}") 
set(_IMPORTED_IMPLIB_DEBUG "${_IMPORT_PREFIX}/debug/lib/${CMAKE_IMPORT_LIBRARY_PREFIX}Aspose.Words.Cpp_${_SUFFIX}d${CMAKE_IMPORT_LIBRARY_SUFFIX}")
set(_IMPORTED_LOCATION_DEBUG "${_IMPORT_PREFIX}/debug/bin/${CMAKE_SHARED_LIBRARY_PREFIX}Aspose.Words.Cpp_${_SUFFIX}d${CMAKE_SHARED_LIBRARY_SUFFIX}")

add_library(Aspose::Words SHARED IMPORTED)
set_target_properties(Aspose::Words PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
    INTERFACE_LINK_LIBRARIES "Aspose::CodePorting.Native.Cs2Cpp"
)


if (VCPKG_TARGET_TRIPLET STREQUAL "x64-windows" OR VCPKG_TARGET_TRIPLET STREQUAL "x86-windows")
  set_target_properties(Aspose::Words PROPERTIES
    IMPORTED_CONFIGURATIONS "DEBUG;RELEASE"
    IMPORTED_IMPLIB_RELEASE "${_IMPORTED_IMPLIB_RELEASE}"
    IMPORTED_LOCATION_RELEASE "${_IMPORTED_LOCATION_RELEASE}"
    IMPORTED_IMPLIB_DEBUG "${_IMPORTED_IMPLIB_DEBUG}"
    IMPORTED_LOCATION_DEBUG "${_IMPORTED_LOCATION_DEBUG}"
  )
else()
  set_target_properties(Aspose::Words PROPERTIES
    IMPORTED_LOCATION "${_IMPORTED_LOCATION_RELEASE}"
    IMPORTED_SONAME "${_IMPORTED_SONAME}"
  )
endif()

unset(_IMPORT_PREFIX)
unset(_SUFFIX)
unset(_IMPORTED_IMPLIB_RELEASE)
unset(_IMPORTED_LOCATION_RELEASE)
unset(_IMPORTED_SONAME) 
unset(_IMPORTED_IMPLIB_DEBUG)
unset(_IMPORTED_LOCATION_DEBUG)
# =============================================================================
# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)